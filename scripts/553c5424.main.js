"use strict";function recipesController(a,b){var c=this;console.log("in recipesController"),c.loadAllRecipes=function(c){a.getAllRecipes(c).then(function(a){b.path("/recipes")})},c.searchRecipes=function(c){console.log(c),a.getRecipes(c).then(function(a){b.path("/recipes")})},c.loadOneRecipe=function(d){console.log("in loadOneRecipe"),console.log(d),d={rId:d},console.log(d),a.getOneRecipe(d).then(function(a){c.recipe_id={},b.path("/recipe-details")})},c.recipes=a.recipes,c.array_ingredients=a.array_ingredients}function loginController(a,b){var c=this;c.login=function(d){a.login(d).then(function(a){c.credentials={},b.path("/profile")})}}function navbarController(a,b){var c=this;c.isLoggedin=function(){return a.isAuthenticated()},c.logout=function(){a.logout().then(function(){b.path("/")})}}function homeController(){}function profilesController(a,b){var c=this;c.loadUser=function(b){console.log("Printing routeParams"),console.log(b),a.getUser(b.userId).then(function(a){$location.path("/profile")})},c.user=a.user,console.log("The user is")}angular.module("PantryIO",["ngAnimate","ngResource","ngRoute","MainController","MainDirective"]).run(function(a,b,c,d,e,f,g){if(f.isAuthenticated()){var h=JSON.parse(c.localStorage.getItem("ga-user"));b.defaults.headers.common.Authorization="Token token="+h.user.token}else d.path("/");a.$on("$routeChangeStart",function(a,b){f.isAuthenticated()&&g.getUser()})}),angular.module("PantryIO").config(["$routeProvider",function(a){a.when("/",{templateUrl:"scripts/views/home.html",controller:"HomeController"}).when("/login",{templateUrl:"scripts/views/login.html"}).when("/profile",{templateUrl:"scripts/views/profile.html",controller:"ProfilesController",controllerAs:"profilesController"}).when("/recipes",{templateUrl:"scripts/views/recipes.html",controller:"RecipesController",controllerAs:"recipesController"}).when("/recipe-details",{templateUrl:"scripts/views/recipe-details.html",controller:"RecipesController",controllerAs:"recipesController"}).when("/about",{templateUrl:"scripts/views/about.html"}).otherwise({redirectTo:"/"})}]),angular.module("PantryIO").constant("ServerUrl","https://limitless-plateau-6601.herokuapp.com"),angular.module("PantryIO").factory("RecipesFactory",["$http","$window","ServerUrl",function(a,b,c){var d={},e=[],f=function(b){return a.get(c+"/food2fork").success(function(a){console.log(a),angular.copy(a,d)}).error(function(){console.log("error")})},g=function(b){return console.log(b),e=b.q.split(", "),console.log(e),a.patch(c+"/food2fork/1",b).success(function(a){console.log(a),angular.copy(a,d)}).error(function(){console.log("error")})},h=function(b){return console.log("factory: trying to get a recipe"),console.log(b),a.patch(c+"/food2fork/2",b).success(function(a){console.log(a),angular.copy(a,d)}).error(function(){console.log("error")})};return{getAllRecipes:f,getRecipes:g,getOneRecipe:h,recipes:d,array_ingredients:e}}]),angular.module("PantryIO").factory("AuthFactory",["$http","$window","ServerUrl",function(a,b,c){var d=function(b){return console.log(b),a.post(c+"/login",b).success(function(a){h(a)})},e=function(){return a.get(c+"/logout").success(function(a){b.localStorage.removeItem("ga-user")})},f=function(){var a=JSON.parse(b.localStorage.getItem("ga-user"));return a?!!a.user.token:!1},g=function(){},h=function(c){b.localStorage.setItem("ga-user",JSON.stringify(c)),a.defaults.headers.common.Authorization="Token token ="+c.token};return{login:d,logout:e,isAuthenticated:f,clearStorage:g}}]),angular.module("PantryIO").factory("ProfilesFactory",["$http","$window","ServerUrl",function(a,b,c){var d,e={},f=function(){console.log("in factory get user");var f=JSON.parse(b.localStorage.getItem("ga-user"));d=f.user.id;var g={headers:{AUTHORIZATION:"Token token="+f.token}};return a.get(c+"/users/"+d,g).success(function(a){angular.copy(a,e),console.log(a)}).error(function(a,b,c,d){console.log("Youre doing it wrong: ",a,b,c,d)})};return{user:e,getUser:f}}]),angular.module("MainController",[]),angular.module("MainController").controller("RecipesController",recipesController),recipesController.$inject=["RecipesFactory","$location"],angular.module("MainController").controller("LoginController",loginController),loginController.$inject=["AuthFactory","$location"],angular.module("MainController").controller("NavbarController",navbarController),navbarController.$inject=["AuthFactory","$location"],angular.module("MainController").controller("HomeController",homeController),homeController.$inject=[],angular.module("MainController").controller("ProfilesController",profilesController),profilesController.$inject=["ProfilesFactory","$routeParams"],angular.module("MainDirective",[]),angular.module("MainDirective").directive("searchForm",[function(){return{restrict:"E",templateUrl:"views/recipes.html",controller:"RecipesController",controllerAs:"recipesController",bindToController:!0,scope:{ingredients:"="}}}]),angular.module("MainDirective").directive("loginForm",[function(){return{restrict:"E",templateUrl:"scripts/views/login-form.html",controller:"LoginController",controllerAs:"loginController",bindToController:!0,scope:{credentials:"="}}}]),angular.module("MainDirective").directive("gaNavbar",[function(){return{restrict:"E",templateUrl:"scripts/views/partials/navbar.html",controller:"NavbarController",controllerAs:"navbarController",bindToController:!0,scope:{},link:function(a,b,c){}}}]);